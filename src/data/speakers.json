[
  {
    "name": "Burke H‚ú™lland",
    
    "avatar":
      "https://secure.gravatar.com/avatar/59247a80fdf2632dfea43b8824e07cdb?s=500",
    "location": "Franklin, TN",
    "bio":
      "Burke Holland is a front-end developer living in Nashville, TN; the greatest city in the world. He enjoys JavaScript a lot because it's the only way he Node to Express himself. Get it? Never mind. Burke blogs only slightly better than he codes and definitely not as good as he talks about himself in the third person. Burke works on the Azure team at Microsoft on behalf of JavaScript developers everywhere. You can find him on Twitter as @burkeholland. ",
    "talk_format": "Talk (~30-45 minutes)",
    "twitter": "burkeholland",
    
    "organization": "Microsoft",
    "shirt_size": "Men's M",
    "title": "Visual Studio Code Can Do THAT?!?",
    "abstract":
      "You ‚ù§Ô∏è  VS Code. I ‚ù§Ô∏è  VS Code. Let me show you some of the cooler things it can do that you probably don't know about.",
    "description":
      "Visual Studio Code is on üî•. Everybody ‚ù§Ô∏è's this unexpected Electron-based text editor, and for good reason: it can do A LOT. It can compile Angular templates on the fly, debug native mobile applications, execute JavaScript inline and so much more! In this session, we‚Äôll take a look at the most powerful features and plugins in Visual Studio Code, many of which, nobody knows about. This is Visual Studio Code like you‚Äôve never üëÄ  it before.",
    
    "audience_level": "Intermediate",
    "tags": ["tips and tricks", "visual studio code", "tools"],
    
    "state": "accepted",
    "confirmed": true
    
  },
  {
    "name": "David Neal",
    
    "avatar":
      "https://secure.gravatar.com/avatar/3ab1249be442027903e1180025340b3f?s=500",
    "location": "Dalton, GA",
    "bio":
      "David is a family man, geek, musician, motorcyclist, speaker, and software developer living in North GA. He's currently a Senior Developer for [LeanKit](http://leankit.com). He's a Microsoft MVP, and runs on a high-octane mixture of caffeine and bacon.",
    "talk_format": "Talk (~30-45 minutes)",
    "twitter": "reverentgeek",
    
    "organization": "LeanKit",
    "shirt_size": "Men's 2XL",
    "title": "FSGD and the Art of Delivering Value",
    "abstract":
      "Shipping software. There's the pressure to go fast. There's the battle for quality and craftsmanship. The struggle is real. The goal is for you to walk away with tools and practical processes we've learned at LeanKit that will impact your team's success.",
    "description":
      "Shipping software. There's the pressure to go fast. There's the battle for quality and craftsmanship. The struggle is real.\r\n\r\nAt LeanKit, we strive to continuously improve our processes across the entire company. Along the way, we developed FSGD, which we affectionately pronounce \"fizz good.\" FSGD is our thinking tool for shipping Frequent, Small, Good, and Decoupled value.\r\n\r\nIn this talk, I'll share with you the challenges we faced as we scaled, how we struggled, what we learned, and how we're evolving. The goal is for you to walk away with tools and practical processes that will impact your team's success.",
    
    "audience_level": "All",
    "tags": ["mentorship", "leadership", "process", "life skills"],
    
    "state": "accepted",
    "confirmed": true
    
  },
  {
    "name": "Beat Zenerino",
    "avatar":
      "https://secure.gravatar.com/avatar/b9ce3be1bb652e74a77e00ddecd0d731?s=500",
    "location": "Unknown",
    "bio":
      "A native of Zurich, Switzerland, Beat (pronounced Bay-ot) has been active professionally in electronics and software since the late 80‚Äôs.\r\nDuring his career he‚Äôs consulted for many Fortune 500 companies such as Boeing, Raytheon and General Dynamics. As a simulation engineer for Foresight systems he‚Äôs helped develop system models and simulations for next generation jet fighter and software defined radios.\r\nAs director of engineering at Griffin Technology, he‚Äôs lead an award winning engineering team. During his tenure he oversaw the development of the multi-million dollar iTrip FM transmitter.\r\nBeat is accomplished in Assembly, C, C++, Java, Python, Javascript and Ruby. Achievements in software development include:\r\n- Assembly and C for 8 to 32 bit micro-controllers\r\n- C and C++ for WDM device drivers\r\n- C++ for Mac OS X device drivers\r\n- C for Linux device drivers\r\n- C, C++, Java and Objective-C for Windows and Mac OS X applications\r\n- Objective-C for iOS applications\r\n- Java for Android applications\r\n- Perl, Python for scripts\r\n- C, C++ and Python for AI, machine learning and robotics\r\n- VHDL for hardware simulations\r\n- Ruby for Rails applications\r\n- Javascript for front-end web and node.js development",
    "talk_format": "Talk (~30-45 minutes)",
    "twitter": "zenibeat",
    "organization": "Bitvana LLC",
    "title": "Driven! Events, State Machines and Node",
    "abstract":
      "Event driven state machines are a very powerful tool. You may remember them from your CS classes but often not with fun memories. It doesn't have to be that way. I will show how straightforward state machines are, how they bring struture to reactive systems, and how easy they are to implement in JS.",
    "description":
      "Event driven state machines are very powerful, but often not well understood and thus underused. They have been around forever and have much research and math behind them. Unfortunately, all the research have made them to appear more complicated than they really are. In this talk I will demonstrate how simple they are and how easy to understand. State machines basically have two construct, a state and a transition, that's it. From there you can build very complex systems. I will also show how state machines apply to real world problems like connecting a cell modem to a network in an embedded system, or online shopping. Finally, I will demonstrate how they can be implemented in Javascript utilizing a mix of functional and imperative programming.",
    "audience_level": "All",
    "tags": ["nodejs", "state machines", "reactive"],
    "state": "accepted",
    "confirmed": true
  },
  {
    "name": "Doris Chen",
    "avatar":
      "https://secure.gravatar.com/avatar/46db650094d817c836dcb303344fd1f6?s=500",
    "location": "Unknown",
    "bio":
      "Dr. Doris Chen is a Senior Technology Evangelist at Microsoft for the Western region of the United States, specialized in web technologies (HTML5, JavaScript, TypeScript and Java).  \r\nDoris has over 18 years of experience in the software industry working in several open source web tier technologies, Java platform, .NET and distributed computing technologies. She speaks at numerous international conferences and user groups including O‚ÄôReilly OSCON, Fluent, Dev Nexus, PHP, HTML5 Dev Conference, WebVisions,  JavaOne, SD Forum, and worldwide User Groups. Doris works very closely to create and foster the open source community around Java, NetBeans, Glassfish, and related technologies. Before joining Microsoft, Doris Chen was a Technology Evangelist at Sun Microsystems.\r\nDoris received her Ph.D. from the University of California at Los Angeles (UCLA) in computer engineering, specializing in medical informatics.",
    "talk_format": "Talk (~30-45 minutes)",
    "twitter": "doristchen",
    
    "organization": "Microsoft",
    "title": "What's New in TypeScript? ",
    "abstract":
      "TypeScript is used to build key frameworks like AngularJS. How TypeScript enables you to leverage features from the current and future of JavaScript will be illustrated. TypeScript new feature, support for Angular, React and Node, the state of the art type system capabilities will be demonstrated.",
    "description":
      "TypeScript, an open source project, has seen enormous growth over the past year. Today, it is used to build several key frameworks like AngularJS, Ionic etc.  Across the board developers are falling in love with TypeScript as they find it to be the most productive way to work with JavaScript. In this talk, Doris will go through how TypeScript enables you to leverage features from the current and future of JavaScript while increasing the productivity of JavaScript development across the board. As ECMAScript 6 gains popularity and more browsers are implementing the standard, JavaScript developers across the board are beginning to wonder, 'what's next?'  This session will cover some of the latest features of TypeScript, including future ECMAScript proposals, support for Angular and React/JSX, the state of the art type system capabilities, and how it all comes together to make working and creating things in JavaScript more productive and fun with TypeScript.",
    "audience_level": "Intermediate",
    "tags": ["JavaScript", "TypeScript"],
    "state": "accepted",
    "confirmed": true
  },
  {
    "name": "Jared M. Smith",
    "avatar": "https://s3.amazonaws.com/nodevember-expo/jared.png",
    "location": "Knoxville, Tennessee",
    "bio":
      "Jared is a Cyber Security Researcher at Oak Ridge National Laboratory, where he leads several R&D projects and works on others in collaboration with researchers from MIT, Stanford Research Institute, U.S. Department of Homeland Security, FBI, NSA, GE, and many other organizations. Jared received his BS in Computer Science from the University of Tennessee and is currently working on his PhD in Computer Science with a focus on Internet infrastructure resiliency and privacy-preserving methods of communication. While an undergrad at UT, Jared founded and led the student-organized computer security organization, HackUTK, growing it from four founders to over 200 members. He also founded and led the first VolHacks, UT‚Äôs annual software, hardware, and VR hackathon, bringing in 23 sponsors and 200+ students in its first year. Jared also teaches at Treehouse, with courses on Big Data and Docker, as well as security courses in the pipeline. In his spare time, he advises several companies on a wide range of technical matters, gives conference talks across North America, organizes technology conferences, and hikes in the Great Smoky Mountains.",
    "talk_format": "Talk (~30-45 minutes)",
    "twitter": "jaredthecoder",
    "organization": "Oak Ridge National Laboratory",
    "title": "Intro to Docker: Fixing the \"it works on my machine\" Problem",
    "abstract":
      "Developers often struggle with the problem of \"the code works on my machine, why doesn't work on yours?\". Docker, a tool to more easily develop and deploy software that addresses this problem, is changing the tech world, from quicker deployments to massive scalability, it's all possible with Docker.",
    "description":
      "Developers often struggle with the problem of \"the code works on my machine, why doesn't work on yours?\". Docker, a tool to more easily develop and deploy software that addresses this problem, is changing the tech world, from quicker deployments to massive scalability, it's all possible with Docker.\r\n\r\nIn this talk, we will learn what Docker is, where's it's used, and how to use it, all through the process of taking an existing web app and packaging it up with Docker, deploying it to production, and scaling it out. We'll learn fundamental concepts in Docker, such as images and containers, as well as cover the fundamental building blocks of a productive Docker workflow: the Docker CLI, Dockerfiles, Docker Compose, and Docker Swarm.\r\n\r\nTentative Outline:\r\n\r\n- Hook\r\n- About the Speaker\r\n- What's Docker?\r\n- Where's it used?\r\n- Optimal Use Cases\r\n- How Docker Works (Containers versus VMs)\r\n- Docker components (the pieces of the Docker architecture)\r\n- Dockerfiles (specifying how your apps should be built)\r\n- Docker CLI (how to use the CLI to build Docker images, run containers, and monitor them)\r\n- Versioning with Docker using the CLI (Using Docker push and pull command, and interacting with Docker Hub, the GitHub for Docker images)\r\n- Building complex systems with Docker (Docker Compose to build multiple images/apps at once)\r\n- Scaling Docker (Using a container orchestrator like Docker Swarm to deploy your app containers to multiple machines)",
    "audience_level": "All",
    "tags": ["docker", "node.js"],
    "state": "accepted",
    "confirmed": true
  },
  {
    "name": "Jesse R Weigel",
    "avatar":
      "https://secure.gravatar.com/avatar/6ecc2cd56720189f1d48e4dd8160f2d9?s=500",
    "location": "Steubenville, Ohio, USA",
    "bio":
      "I am a front end developer who live codes my day to day work five days a week for the freeCodeCamp YouTube channel. I am currently into building things with React. I love sharing my coding experiences, including the struggles and failures with other developers. I am especially happy when I get a chance to encourage new developers.\r\n\r\nI am not sure what is so unique about me that others want to hear me speak, but more and more people keep watching my streams, so I must be doing something right. ",
    "talk_format": "Talk (~30-45 minutes)",
    "twitter": "JesseRWeigel",
    "organization": "Franciscan University of Steubenville / freeCodeCamp",
    "title": "How Live Coding Changed My Life",
    "abstract":
      "I have been live coding nearly every weekday for the last few months for freeCodeCamp. It has changed my live. My fear of others seeing my code is gone. My skills as a dev have increased at a remarkable rate. Most importantly and unexpectedly, a caring and helpful community has developed.",
    "description":
      "How do you get over a fear of others seeing your code? Start live coding on YouTube of course!\r\n\r\nFollow me on my journey from being a solo dev who was afraid of showing my code to anyone to live coding on a YouTube channel of over 170k subscribers in just a few months. Along the way my skills improved dramatically. An amazing community of developers of all ages, locations, and skill levels has grown around the live streams. Live coding has changed my life as a developer and as a person, and I think anyone can enjoy the benefits of live coding. ",
    "audience_level": "All",
    "tags": ["community building", "live coding"],
    "state": "accepted",
    "confirmed": true
  },
  {
    "name": "Loretta Stokes",
    "avatar": "/img/speakers/loretta-stokes.jpg",
    "location": "Unknown",
    "bio":
      "I work for Schneider Electric and I am an active member of WiTT and WomenGetIT. I have developed software for 10 years and managed a team of software developers for 5+ years. Career development is something that I take seriously as a manager and as a mentor. \r\n\r\n",
    "talk_format": "Talk (~30-45 minutes)",
    "twitter": "LorettaTech",
    
    "organization": "Schneider Electric",
    "title": "Wonder Woman Wannabe",
    "abstract":
      "Do you ever feel you are constantly called in to save the day at home and at work? For female professionals, we feel we have to choose between a career and being a mom. However, there are ways to balance work and have a family. Its all about the choices we make.",
    "description":
      "In my experience as president of WiSE ( Women in Schneider Electric), this is one of the most often asked questions during our meetings. Finding ways to balance your career and a family feels like doing the impossible. In this talk, I'll share my 13 years of experience as a developer, manager, and mother of two. Attendees will walk away with strategies for time with your family and how to manage your career.",
    "audience_level": "All",
    "tags": [],
    "state": "accepted",
    "confirmed": true
  },
  {
    "name": "Nara Kasbergen",
    "avatar":
      "https://secure.gravatar.com/avatar/b36609b33707f04623f84f7381d5e94e?s=500",
    "location": "Washington, DC",
    "bio":
      "Nara Kasbergen is a full-stack developer in [NPR](http://npr.org) (National Public Radio)‚Äôs Digital Media group, where she's worked on a variety of projects, most notably the third-party developer platform for NPR One. She recently joined the tech conference speaking circuit because of her interest in Developer Experience (DX), community-building, the intersection of humans and code, and her volunteer work for [Open Sourcing Mental Illness](https://osmihelp.org), a non-profit organization raising awareness about mental health in the tech industry. \r\n \r\nThough she has no noticeable accent, she hails from The Netherlands and lived in Munich, Houston, Pittsburgh, Tokyo, and New York City prior to settling down in Washington, DC. In her spare time, she satisfies her foodie habits by trying out all of the best restaurants in the city, collects board games, and watches too much Netflix.",
    "talk_format": "Talk (~30-45 minutes)",
    "twitter": "xiehan",
    "organization": "NPR",
    "title":
      "Empathy As A Service: Supporting Mental Health in the Tech Workplace",
    "abstract":
      "1 in 5 Americans are living with a mental illness such as depression, bipolar, anxiety, or ADHD. How accommodating and inclusive are tech workplaces for people with these disorders? This talk aims to help end the stigma surrounding mental health and discuss how we can all become better allies.",
    "description":
      "At any given time, 1 in 5 Americans are living with a mental illness, such as depression, bipolar disorder, generalized anxiety disorder, substance use disorder, burnout, or ADHD. Statistically, all of us working for an organization with 5 or more employees have at least one colleague who is affected. At the same time, the tech industry is often characterized by high stress, long hours, workplace pressure to be available by phone and e-mail after-hours or sometimes even while on vacation, social pressure to constantly network and attend conferences and make a name for yourself, and the precarious balance between trying to do good by contributing to open-source and maintaining some semblance of free time that doesn't involve coding. Given how this demanding environment increasingly blurs the line between our professional and personal lives, how can we ensure that the most vulnerable among us aren't being left behind?\r\n \r\nAs a community, the single most damaging thing we can do is continue to treat mental health as a personal shortcoming that can't be talked about openly. We shouldn't think of it as \"somebody else's problem\"; the 4 in 5 of us who don't currently have mental health disorders must do our part to help end the stigma. This talk will begin with an overview of key statistics about mental illness, followed by the efforts of the non-profit organization [Open Sourcing Mental Illness](https://osmihelp.org) to gather more data about mental health in the tech industry, the ALGEE action plan taught by the [Mental Health First Aid](https://www.mentalhealthfirstaid.org) training course, and finally conclude with ideas and strategies for making our tech workplaces more accommodating and inclusive.",
    "audience_level": "Beginner",
    "tags": [
      "workplace",
      "inclusivity",
      "culture",
      "wellness",
      "health",
      "mental health"
    ],
    "state": "accepted",
    "confirmed": true
  },
  {
    "name": "Tracey Berg-Fulton",
    "avatar": "https://s3.amazonaws.com/nodevember-expo/tracey.jpg",
    "location": "Pittsburgh, PA",
    "bio":
      "Tracey Berg-Fulton is Content Lead at Cotton Bureau. In addition to doing the words and plate spinning for Cotton Bureau, Tracey is an advocate for Type 1 Diabetes, focusing on access to insulin for all. She is a graduate of Otterbein University and the University of Glasgow, and spends way too much time live tweeting Antiques Roadshow, running silly distances, and picking up and putting down weights. She and her husband share their Pittsburgh home with an adopted giant schnabrador named Walter.",
    "talk_format": "Lightning Talk (~5-10 minutes)",
    "twitter": "BergFulton",
    "organization": "Cotton Bureau",
    "title":
      "Hit it With a Hammer or Light it on Fire: Lessons on being a newbie developer from an old car",
    "abstract":
      "Buying a busted old car has made me a better developer, and better mechanic. I'll talk about doing things you've never been taught to do, how to be comfortable in terrifying situations, how pairing can be beneficial for novice developers AND mechanics, and navigating potentially hostile communities.",
    "description":
      "In July of last year, I embarked on a journey. I bought a busted, underpowered, rotting 1959 Nash Metropolitan. At about this same time, I transitioned into full-time work on the web. As I've worked on the car and my career, I've noticed some interesting parallels between being a newbie developer and a newbie mechanic. I'll share what I've learned about dev processes, pairing, problem-solving, and life from working on my jalopy, including why sometimes the best options are to hit it with a hammer, or light it on fire. ",
    "audience_level": "Beginner",
    "tags": ["beginners", "pairing", "community", "learning"],
    "state": "accepted",
    "confirmed": true
  },
  {
    "name": "Timothy De Block",
    "avatar":
      "https://secure.gravatar.com/avatar/404a12c848bf9a5453a0ef579b9d29c9?s=500",
    "location": "Unknown",
    "bio":
      "Timothy De Block is a senior software security engineer based in Nashville, TN. The last few years he's stepped into development to provide guidance and be a resource on all things security. He believes in building strong relationships and putting people in a position to succeed. As a presenter he believes in quality and providing practical actionable advice to his audience. He is a founding member of ColaSec and the local OWASP chapter in Columbia, SC. When he‚Äôs not playing Overwatch he‚Äôs producing the Exploring Information Security podcast. A weekly interview based podcast that touches on different infosec topics. ",
    "talk_format": "Talk (~30-45 minutes)",
    "twitter": "TimothyDeBlock",
    "organization": "Exploring Information Security",
    "title": "How to embed security into your process",
    "abstract":
      "Embedding security is a great way to secure and make a development process more efficient. Vulnerabilities are ultimately bugs. Catching them earlier in the process helps avoid issues and wasted time, effort, and money later. This talk will provide actionable advice on doing just that. ",
    "description":
      "So you‚Äôre interested in security. Maybe you‚Äôre looking to get into the field. Maybe you understand the importance of security and want to improve in that area. Most developers want to get security right, but where do you start? This talk will provide actionable advice on embedding security into your current process. I will show you the resources, tools, and activities at your disposal. This will make your application more secure and also more efficient. Security vulnerabilities are ultimately just bugs in an application. Catching issues early saves time and money. \r\n\r\nWe‚Äôll talk about what I see developers are doing right. I‚Äôll share the difference between dynamic and static analyzers and where to use them in your process. We‚Äôll talk about tools such as the Zed Attack Proxy, Fiddler, and the node security project (NSP). We‚Äôll also get into activities that will improve security and the process. Activities like Code review, threat modeling, and patching. I‚Äôll highlight the available resources to developers. The Open Web Application Security Project (OWASP) is a big resource for developers. We‚Äôll also dive into some of the leaders in the application security field. The last few years I‚Äôve had the opportunity to work with development teams and help them embed security into their process. This talk is based on those experiences. Allow me to show you what the wonderful world of security and how to embed it in your process. \r\n",
    "audience_level": "All",
    "tags": ["Security", "NSP", "Node", "JavaScript"],
    "state": "accepted",
    "confirmed": true
  },
  {
    "name": "Heidi Waterhouse",
    "avatar": "https://s3.amazonaws.com/nodevember-expo/heidi.jpg",
    "location": "Twin Cities, MN",
    "bio":
      "Heidi is a developer advocate and widely experienced technical writer working in the intersection of cutting-edge technology, usability, and chaos. \r\n\r\nShe speaks on topics like search-led writing, starting new documentation for products, common mistakes in software development, and whistleblowing as a technical writer.",
    "talk_format": "Talk (~30-45 minutes)",
    "twitter": "wiredferret",
    "organization": "LaunchDarkly",
    "title": "Choose Your Own Deployment: Interactive Feature Flag Adventure",
    "abstract":
      "Welcome, bold adventurer! Are you ready to work with me to explore the multiple paths of deployment, activation, and feature flags? The audience drives the talk by choosing different deployment and activation options in real time and we‚Äôll see how the story ends.\n\n",
    "description":
      "We‚Äôll use this format to explore how feature flags can work with CI/CD or other rapid deployment models, and how we can work to make deployments safer and faster incrementally.\r\n\r\nAudiences will get a fun, fast-paced exploration of forking deployments. They‚Äôll walk away with an understanding of how to reduce the risk of major changes, how to follow multiple streams of deployment, and how to evaluate the best way to speed deployment in their environments.\r\n\r\nThis really is a dynamic, audience driven presentation. They'll select branching options, and I'll create the talk on the fly based on pre-determined options. As such, it's going to be hard to show you the outline. Topics I intend to cover include feature flags, scaled deployments, and kill switches.\r\n",
    "audience_level": "All",
    "tags": ["feature flags", "funny"],
    "state": "accepted",
    "confirmed": true
  },
  {
    "name": "Josh Cypher",
    "avatar":
      "https://secure.gravatar.com/avatar/232a628b326949e84d0916155e15ccb2?s=500",
    "location": "Nashville, TN",
    "bio":
      "Josh Cypher is a Quality Automation Engineer at Emma, Inc. Before Emma, he spent five years as a product manager, learning to code in an effort to better understand his developers. When he took the leap into automated testing, he never looked back. \r\n\r\nJosh is an avid cyclist and sometimes commutes to work on his Bianchi road bike. In his off hours, he enjoys spending time with his wife, Rachel, and his dog, Alistair. He is a board game enthusiast, beer aficionado and an excellent campfire cook, and can often be found in his basement workshop tinkering away with all kinds of projects.  \r\n",
    "talk_format": "Talk (~30-45 minutes)",
    "twitter": "joshuacypher",
    "organization": "Emma, Inc.",
    "title": "Continuous Testing With React, Storybook, and WebdriverIO",
    "abstract":
      "TDD is all the craze, but establishing a good workflow is key for rapid iteration.  We will explore using TDD practices in a react app, In React Storybook, and with selenium-based acceptance testing, all configured to work along side you, not against you, ALL IN JAVASCRIPT.",
    "description":
      "Working in a continuous testing environment requires us to think on multiple levels about how we test our code.  \r\n\r\nWe have our core component library which we can sandbox and experiment with in React Storybook.  We can test our components thoroughly here in *multiple browsers* to check compatibility and function.  \r\n\r\nThen we assemble our components in a react app, where we implement another level of unit and functional testing. \r\n\r\nOur react app has very specific goals, which we can acceptance test through WebdriverIO (Selenium). All of this can run in the background *and* on a continuous integration server as part of our build process so we can continually iterate on our code without fear of introducing breaking changes.  \r\n\r\nThis tight feedback loop is key for pursuing continuous deployment and rapid delivery of code and allows us to go further with greater confidence than before.  \r\n\r\nIn this talk, we will walk through some tooling and explore examples of how you can implement continuous testing in your delivery lifecycle using thing like React, Redux, Storybook, Mocha, Jest, WebdriverIO, Selenium, and GO CI.",
    "audience_level": "Intermediate",
    "tags": [
      "selenium",
      "webdriver",
      "ci",
      "continuous integration",
      "testing",
      "react",
      "mocha",
      "jest",
      "chai",
      "javascript",
      "node",
      "storybook"
    ],
    "state": "accepted",
    "confirmed": true
  },
  {
    "name": "Tyson Cadenhead",
    "avatar":
      "https://secure.gravatar.com/avatar/283773207d6e2c2b9f2a86f7088a7328?s=500",
    "location": "Nashville, TN",
    "bio":
      "I am the Senior JavaScript Developer at Aloompa and the author of \"Socket.IO Cookbook\". I have been writing code since high-school and have successfully ridden the wave of JavaScript frameworks over the past 10 years and come out on the other side. I am especially passionate about unit testing, React, functional programming, Redux, GraphQL and Node Microservices.\r\nOutside of programming, my huge passions are gardening, playing music, autism advocacy (my 6-year-old son has profound non-verbal autism), drawing and spending time with my family.",
    "talk_format": "Talk (~30-45 minutes)",
    "twitter": "tysoncadenhead",
    "organization": "Aloompa",
    "title": "Functional Programming In React",
    "abstract":
      "In version 14 of React, it became possible to write React components as simple functions instead of more complex classes. Combining React with other libraries like Immutable.js, Ramda and Recompose, we can compose entire complex applications without ever using a single class.",
    "description":
      "Functional programming is becoming more and more popular in the JavaScript community. The tricky part is taking the academic functional programming concepts and building something truly useful. We're JavaScript developers after all. We build applications to solve real-world problems!\r\nFunctional Programming In React will explore combining functional programming concepts like pure functional composition, currying, immutable data structures and higher-order functions in the context of creating a real functioning React application.\r\nWith the help of core JavaScript language features like map and reduce and great utilities like Immutable.js, Ramda and Recompose, we can take functional programming concepts and build applications that are more predictable, maintainable and testable.",
    "audience_level": "Intermediate",
    "tags": ["javascript", "functional programming", "react"],
    "state": "accepted",
    "confirmed": true
  },
  {
    "name": "Elijah Manor",
    "avatar":
      "https://secure.gravatar.com/avatar/fc7253276960c6f0718688e330bca47f?s=500",
    "location": "Nashville, TN",
    "bio":
      "Elijah Manor is a Christian and a family man. He works at LeanKit (@leankit) as a senior software engineer. He specializes in front-end web development and is a Microsoft ASP.NET MVP, ASPInsider, IE userAgent, and a Pluralsight author. He enjoys blogging at http://elijahmanor.com and tweeting (@elijahmanor) about the things he learns.",
    "talk_format": "Talk (~30-45 minutes)",
    "twitter": "elijahmanor",
    "organization": "LeanKIt",
    "title": "Using npm scripts as your build tool",
    "abstract":
      "In this session, we'll look at using npm scripts to handle your build needs. We'll cover running scripts in series and in parallel, using lifecycle hooks, using config variables, leveraging git hooks, and more. In addition we'll examine cross-platform issues when using Mac, Linux, and Windows.",
    "description":
      "If you are building a JavaScript application then chances are you're already using npm to install your dependencies. In this session, we'll take an example project and slowly start to leverage npm scripts to handle all of our various build needs.\r\n\r\nWe will start by writing some basic npm scripts, then move to creating some custom scripts. Then we'll look how to run scripts in series and in parallel, how to use various npm script lifecycle hooks, how to pipe data from one process to another, and how to use environment or config variables within our scripts.\r\n\r\nIn addition we will look at several node packages that enable us to:\r\n\r\n1. Use shorthand and wildcard syntax\r\n2. Run scripts when either when the file system changes\r\n3. Run script when certain git hooks are triggered\r\n4. Provide us various ways to easily find and execute the scripts we want\r\n\r\nWe will examine several techniques to split out npm scripts to external files once they get large or complicated. And finally we will address the various things you need to consider when trying to run npm scripts across different platforms (Mac, Linux, Windows).",
    "audience_level": "Intermediate",
    "tags": [
      "cross platform",
      "development",
      "nodejs",
      "node",
      "javascript",
      "devops"
    ],
    "state": "accepted",
    "confirmed": true
  },
  {
    "name": "Alex Robson",
    "avatar":
      "https://secure.gravatar.com/avatar/cabac203bf3b11b2f5d30bde7e6835c3?s=500",
    "location": "Unknown",
    "bio":
      "Alex Robson is a full-stack software engineer who spends a lot of time thinking about systems design and ops automation. He currently enjoys working at npm where he helps keep the packages flowing.",
    "talk_format": "Talk (~30-45 minutes)",
    "twitter": "a_robson",
    "organization": "npm, Inc.",
    "title": "Kubernetes at npm",
    "abstract":
      "Modern services need automated deployments, resiliency, and simple horizontal scaling. In this talk, you'll learn how npm uses Kubernetes to automate deployments and manage services in dynamic cloud environments. You'll also learn how to apply npm's tooling for automated builds and deployments.",
    "description":
      "Learn the how and why behind npm's adoption of Kubernetes as it helps our small and intrepid team run the largest software registry in the world. This talk will cover:\r\n\r\n * common drivers in modern software development that led to us choosing Kubernetes\r\n * how Kubernetes has solved specific challenges and improved our approach to automation  \r\n * the basics of what Kubernetes is, how it works, and why we chose it over alternatives\r\n * the tools we've created to simplify continuous integration and deployment\r\n\r\nWhile you won't leave this talk a newly minted Kubernetes expert, you will gain an appreciation for what it is, what it does, and how we used it to solve common challenges in DevOps automation.",
    "audience_level": "Intermediate",
    "tags": ["kubernetes", "docker", "Node.js", "DevOps"],
    "state": "accepted",
    "confirmed": true
  },
  {
    "name": "Hao Luo",
    "avatar":
      "https://secure.gravatar.com/avatar/28e700c0f6181a8bba8952eb1a7d2920?s=500",
    "location": "Chicago, IL",
    "bio":
      "I am a developer focused on web technologies mostly Javascript and PHP.  I work at Microsoft as a¬†technical evangelist.  I'm also the organizer of Laravel Chicago.  During my spare time, I love street photography, and work on my side projects.  I live in Chicago, and love it (yes even the¬†winters).",
    "talk_format": "Talk (~30-45 minutes)",
    "twitter": "howlowck",
    "organization": "Microsoft",
    "title": "Impress your friends - Build a Smart Photobooth!",
    "abstract":
      "Want to build a super awesome photobooth, integrating an DSLR and a photo printer?  This talk will show you how.  Oh, it will also have facial recognition.",
    "description":
      "Photobooths are awesome.  No matter how serious a person is, they become goofy in front of a photobooth.  But more importantly, they bring people together.  \r\n\r\nThis talk will go through building a photobooth integrating a Canon DSLR, and an internet-connected photo printer, all running on top of NodeJS with a React frontend. Not only that, the photobooth will have facial recognition using Cognitive Service's [Face API](https://docs.microsoft.com/en-us/azure/cognitive-services/face), allowing you to identify who are in the photos.\r\n\r\nThe talk will have a fully functional photobooth using these technologies for you to play with.  \r\n\r\nYou will learn how to:\r\n‚Ä¢ integrate a DSLR\r\n‚Ä¢ submit a print job to an internet printer using NodeJS\r\n‚Ä¢ tie everything together with a React frontend\r\n‚Ä¢ do facial recognition using Microsoft Cognitive Services' Face API\r\neasily use the Face API without much coding",
    "audience_level": "All",
    "tags": ["Javascript"],
    "state": "accepted",
    "confirmed": true
  },
  {
    "name": "Lyle Reed",
    "avatar":
      "https://secure.gravatar.com/avatar/16b0b62e7443fe3c6ca63c3a2f6340d1?s=500",
    "location": "Greater Nashville Area, TN",
    "bio":
      "Hi there, I'm a web dev in Nashville, Tennessee for the amazing team at Lewis Communications where we build exciting and performant brands. I focus front-end dev mostly working with node and Craft CMS.  I'm passionate about creating unique, modern, and functional digital experiences for all users.  \r\n\r\nI come from a scientific background in physics and mathematics but the web is really where I found my calling. I've been building sites in some form or another since 2004 and grew up in Nashville. A big fan of local tech groups like Make Nashville and the Middle Tennessee Robotics Art Society where I'm somtimes called \"the drone guy\".",
    "talk_format": "Talk (~30-45 minutes)",
    "twitter": "lanreed",
    "organization": "Lewis Communications",
    "title": "Accessibility - Myths and Methods",
    "abstract":
      "We can‚Äôt make assumptions about users abilities. Users may be \"impaired\" only in certain contexts, situations, or periods in their lives. To reach the widest possible audience, we must understand accessibility is more than screen readers--It‚Äôs UX focused on usability to the widest possible audience.",
    "description":
      "Accessibility is more than just making your site work on screen readers. -- It‚Äôs subset of UX focused on making a site usable to the widest possible audience. To reach and engage these groups it's important to keep considerations of accessibility in mind.\r\n\r\nIn my talk I advocate for \"impaired\" users of all types. From screenreader software and font contrast to that week you spent in a wrist brace; all users can benefit from considerations of accessibility. Enhancement can even benefit SEO metrics -- when you understand their overlap. \r\n\r\nWe'll cover some common myths about impaired users and discuss some easy techniques to improve web accessibility. I'll cover aria-tags and structure as well as testing and tooling for any framework. Any developer can benefit from perspective on impaired users in their project.",
    "audience_level": "Intermediate",
    "tags": ["HTML", "Accessiblity", "JS", "Tooling", "UX", "a11y", "SEO"],
    "state": "accepted",
    "confirmed": true
  },
  {
    "name": "Jayraj Jog",
    "avatar": "/img/speakers/jayraj-jog.jpg",
    "location": "Unknown",
    "bio":
      "Jayraj Jog is a senior software engineer at Skyhigh Networks. He was the technical lead of the team that developed Skyhigh Network's next-generation UI platform. There he learned many valuable lessons in component-based architectures, package managers, versioning, and friendship. Prior to this he worked at BitTorrent, Dell, and co-founded a social punchcard application named Kanj.us. His favorite language is Python.",
    "talk_format": "Talk (~30-45 minutes)",
    "twitter": "jayjog",
    "organization": "Skyhigh Networks",
    "title": "Fantastic Components and How to Find Them",
    "abstract":
      "Do you have an internal UI component library you struggle to tame? I will describe how to package, distribute, and effectively use UI components, with a focus on Angular, Typescript, Webpack, and Artifactory.",
    "description":
      "Your component library doesn't have to become a hard-to-manage hydra. An internal component library can help improve visual consistency, quality, and consistency, and DRY out your code. And yet are so many decisions to make: Angular or React, TypeScript or ES6 or Flow, dependency management, packaging, distribution, documentation, developer on-boarding, and so much more. This talk teaches you some of the insights and lessons we learned at Skyhigh Networks 1.5 years into our component-driven journey.\r\n\r\nIn this session I will describe what we learned at Skyhigh Networks when we moved to a component-based architecture for our UI, using Angular, Webpack, and TypeScript. Some of the topics I will touch upon:\r\n\r\n* Approaches to packaging and distributing components and applications using Webpack, NPM/yarn, and Artifactory\r\n* Documenting components and on-boarding newcomers\r\n* Standardized component APIs and tips on API design\r\n* Empowering non-frontend-developers to build UIs\r\n* Working with distributed teams\r\n* The surprising impact of standardized components on productivity",
    "audience_level": "Intermediate",
    "tags": ["npm", "javascript", "yarn", "components"],
    "state": "accepted",
    "confirmed": true
  },
  {
    "name": "Ryan Tablada",
    "avatar":
      "https://secure.gravatar.com/avatar/0873a576b5bd3a12d125aff99ded5b6e?s=500",
    "location": "Unknown",
    "bio":
      "Ryan started in the fire of the startup world working on projects in many different fields.\r\nHe has made his way as a contributor in the Laravel, Node, and Ember communities and taught at The Iron Yard.\r\nNow Ryan works with Prototypal on Embercasts, training, and client projects.",
    "talk_format": "Talk (~30-45 minutes)",
    "twitter": "ryantablada",
    "organization": "Prototypal",
    "title": "A Shiny New Way of Rendering",
    "abstract":
      "This talk looks at how Glimmer.js and Ember.js take a different approach to rendering and what can be learned by all frameworks.\nThrough examples, the talk shows how the Glimmer rendering engine along with HTMLBars continues to get more performant and where more optimizations could come from.",
    "description":
      "The Glimmer rendering engine used by Ember.js and Glimmer.js takes a different approach than most of the popular frameworks to achieve performance.\r\n\r\nTo start, the talk looks at a brief history of early framework rendering techniques and compares them to a modern system: React's Virtual DOM.\r\nWith this as a framework, we then look at how HTMLBars and Glimmer differ from this approach.\r\n\r\nIn the second part of the talk, we look more in-depth at how the Handlebars unlocks a \"declarative programming language for building and updating DOM\" when matched with HTMLBars and the Glimmer VM.\r\nHere, we will look at examples of compiled Glimmer \"byte code\" and see how the rendering VM and precompile step work together to create more performant rendering, and how these technologies have improved over time.\r\nWe'll also compare these outputs to those of some other popular DSLs in other frameworks to gather more insight into the differences in approaches.\r\n\r\nFinally, we'll explore what Glimmer VM performance tuning looks like for modern apps and how these techniques can be mapped to performance concepts in other JS frameworks.",
    "audience_level": "Intermediate",
    "tags": ["Ember.js", "JSX", "Glimmer.js", "Rendering"],
    "state": "accepted",
    "confirmed": true
  },
  {
    "name": "Jonathan Kemp",
    "avatar":
      "https://secure.gravatar.com/avatar/de40ab94291f001c3a968f0260fd0669?s=500",
    "location": "Knoxville, TN",
    "bio":
      "Jonathan is a Senior Front End Developer at Scripps Networks Interactive,¬†the leading developer of high-profile content for lifestyle¬†media platforms, working with a team of developers on the websites for their portfolio of popular lifestyle brands including HGTV, DIY Network, Food Network and¬†Great American Country. \r\n\r\nJonathan is a husband and father of two, living in Knoxville, TN. In his free time, he likes to spend time with his family. He is also passionate about learning and reading, as well as working on open source projects.",
    "talk_format": "Talk (~30-45 minutes)",
    "twitter": "jonkemp",
    "organization": "Scripps Networks Interactive",
    "title": "Get More Done with Vue.js",
    "abstract":
      "Vue.js is a framework for building user interfaces that's designed to be simple and flexible with a heavy focus on performance. In this session, you‚Äôll learn what Vue.js is and how its simplicity and flexibility combined with its performance and developer experience can help you get more done.",
    "description":
      "Vue.js is a framework for building user interfaces that's designed to be simple and flexible with a heavy focus on performance. In this session, you‚Äôll learn what Vue.js is and how to use it to build a real world application. We'll also look at its simplicity, flexibility, performance and developer tools and see how they compare with other modern JavaScript frameworks, like React and Angular. By the end of the session, you'll see how Vue's simplicity and flexibility combined with its performance and developer experience can help you get more done faster.",
    "audience_level": "Intermediate",
    "tags": ["javascript"],
    "state": "accepted",
    "confirmed": true
  },
  {
    "name": "Randy Cox",
    "avatar": "https://s3.amazonaws.com/nodevember-expo/randy.jpg",
    "location": "Indianapolis, Indiana",
    "bio":
      "Randy has been a professional programmer for nearly 20 years, and has focused exclusively on front-end web development since 2004. He lives with his family in Noblesville, Indiana where he prefers to make things out of atoms than out of bits.",
    "talk_format": "Talk (~30-45 minutes)",
    "twitter": "randykcox",
    "organization": "E-gineering, LLC",
    "title": "Unlocking the Mysteries of an Unfamiliar Codebase",
    "abstract":
      "You‚Äôve been tasked with adding a feature to a large, crusty old JavaScript app that you‚Äôve never seen before. How do you begin?\n\nLearn how to analyze a legacy codebase so that you can confidently update it‚Äîeven if it's undocumented, disorganized, and confusing code with no tests.",
    "description":
      "As professional developers, most of our projects have one thing in common: *We have to work in someone else‚Äôs code.* It is rare to be blessed with a truly ‚Äúgreen field‚Äù project where we have the privilege of writing the first line of code. More often, we join a project that is already in progress, or is nearing completion and needs some extra help, or has been in production for some period of time, untouched, and now needs to be modified or enhanced.\r\n\r\nThe first thing a developer needs to do when starting on such a project is to figure out how the existing software works. Our idealistic notions that the code will be neatly organized, clearly documented, and thoroughly unit tested often give way to the ugly reality of code that is undocumented, disorganized, and untestable.\r\n\r\nTo do the job of enhancing the software you first need to make sense of the code. This skills talk will teach you some techniques for analyzing unfamiliar code so you can get your job done without losing your mind.",
    "audience_level": "All",
    "tags": [
      "code analysis",
      "code maintenance",
      "code improvement",
      "refactoring",
      "unit testing"
    ],
    "state": "accepted",
    "confirmed": true
  },
  {
    "name": "Lisa Huang",
    "avatar":
      "https://secure.gravatar.com/avatar/96c332a96737c6668906232e39cb16ef?s=500",
    "location": "Unknown",
    "bio":
      "Lisa Huang is a co-founder of FlightGold, a Fullstack engineer based in San Francisco Bay area. Lisa has a background in digital marketing, building mobile-optimized web apps and a keen Rubyist. She is a self-taught developer and started her coding journey with FreeCodeCamp projects. \r\n\r\nIn her off time, you can find Lisa exploring the West coast and hacking on Arduino.\r\n",
    "talk_format": "Talk (~30-45 minutes)",
    "twitter": "lisaychuang",
    "organization": "FlightGold, inc",
    "title": "Instant Mobile Web: An Accelerated Mobile Pages primer",
    "abstract":
      "In 2016, mobile internet usage exceeded desktop for the first time! With over 50% of users on mobile, is your web app optimized for them?\n\nLet‚Äôs learn about Accelerated Mobile Pages, how AMP address mobile user challenges, and build a valid AMP app together!",
    "description":
      "In Oct 2016, mobile and tablet internet usage exceeded desktop for the first time worldwide! With **over 50% of your users on their phones**, is your web app optimised for them?\r\n\r\n[Accelerated Mobile Pages (AMP)](https://www.ampproject.org/) is an open-source initiative, a Javascript library for building **lightening speed mobile web apps**. As of May 2017, there are over 2billion AMP pages and growing! The Washington Post, eBay, Airbnb - these are just some companies who are using AMP in their web products\r\n\r\nWe will look under the hood and learn about how** AMP optimizes mobile web performance** with resource allocation, invisible ink, sandbox iFrames and more. Attendees will learn about what makes AMP pages lightning fast on mobile, and get up and running with a **code demo.**\r\n\r\nAttendees will learn first hand about: \r\n\r\n1. How AMP addresses mobile user pains \r\n2. How to build a valid AMP page with navigation, embedded media, and user interactivity. \r\n3. Future AMP integration with progressive web apps (PWA)\r\n\r\nThis talk is suitable for beginner and intermediate developers with experience in Javascript. [Click here for Presentation slides](bit.ly/AMPCorgi)",
    "audience_level": "All",
    "tags": [
      "open source",
      "frontend",
      "performance",
      "mobile",
      "web apps",
      "javascript"
    ],
    "state": "accepted",
    "confirmed": true
  },
  {
    "name": "Jonathan Creamer",
    "avatar":
      "https://secure.gravatar.com/avatar/982085c143104804c4ced3b61864520f?s=500",
    "location": "Unknown",
    "bio":
      "JavaScript and front end technologies are my passioin. I also believe that you cannot ever stop learning which is why I stay active in the development community attending user groups like NashJS, ID of Nashville, and NashDotNet, blogging for FreshBrewedCode.com, Jonathan Creamer.com, Net Tuts, and Tech.pro and scouring Twitter and the internet for as much knowledge I can squeeze into my brain. I work as a Senior Front End Developer at Lonely Planet and am having a great time developing front end applications. I am also an IE MVP and an IE userAgent Please feel free to contact me, I love meeting other devs who are passionate about what they do.",
    "talk_format": "Talk (~30-45 minutes)",
    "twitter": "jcreamer898",
    "organization": "Lonely Planet",
    "title": "Express yourself with Typescript and React",
    "abstract":
      "Express has long been a tool for building high performance node.js applications.  Types will ensure you have a stable, and maintainable app with less unit tests, and React rendering makes it easy to share components between the front end and the back end.",
    "description":
      "Building a node.js app with express is easy. However, once you get ready to ship a larger scale express app to production, it can get a bit more tedious. By adding in TypeScript, you can build in some safety measures to protect against runtime bugs. Plus, because of the type safety, you can write less tests and more application code. Throwing React into the mix gives you the ability to build server side and client side \"templates\" with the same component model. In this talk, we'll cover building a production ready express app with TypesScript and React, working with middleware, and making sure you're ready for launching your app into production.",
    "audience_level": "Intermediate",
    "tags": ["node.js", "express", "react", "typescript"],
    "state": "accepted",
    "confirmed": true
  },
  {
    "name": "Mike Lazer-Walker",
    "avatar":
      "https://secure.gravatar.com/avatar/e89cac2469786f0259d685b74066fe0a?s=500",
    "location": "San Francisco, CA",
    "bio":
      "Mike Lazer-Walker makes interactive art, experimental games, and software tools. \r\n\r\nAs a game designer and artist, his work has been featured at the events ranging from IndieCade and the Game Developer's Conference to the Smithsonian Museum and NPR's All Things Considered. Most of his work focuses on reframing everyday objects and spaces as playful experiences with nontraditional interaction models. Until recently, he worked with the Playful Systems research group at the MIT Media Lab, where his research focused on storytelling at the intersection of experiential theatre, interactive fiction, and augmented reality.\r\n\r\nAs an engineer and designer, he's worked at companies like Pivotal Labs and Etsy, and on beloved games and apps such as Words With Friends and Timehop. Currently, he works with Sensible Object creating tabletop games augmented with conversational UI using Amazon Alexa.\r\n",
    "talk_format": "Talk (~30-45 minutes)",
    "twitter": "lazerwalker",
    "organization": "",
    "title": "Let‚Äôs JavaScript Like It‚Äôs 1927",
    "abstract":
      "Have you ever wanted to hack on old hardware? Make cross-platform games? Let‚Äôs explore how cross-platform JavaScript can open up a world of possibilities to make games and weird interactive experiences that combine the digital and physical in new and exciting ways.",
    "description":
      "Making games and weird interactive experiences that involve hacking on old hardware is exciting, but can also seem incredibly daunting and scary. How do you even go about dealing with physical hardware? How can you write and test things that run both on your home computer and on whatever weird hardware you‚Äôre workingwith? This talk hopes to demystify making cross-platform games and games involving custom hardware, showing how you too can easily use JavaScript to build these sorts of things!\r\n\r\nTo wrap our heads around this, we‚Äôll dive into the design and development of ‚ÄúHello, Operator!‚Äù, a game played on a vintage Western Electric telephone switchboard from 1927. Players sit down at the physical switchboard and learn how to use it as they actually would have in the 1920s. Under the hood, the game is a blend of old and new technology, with a JavaScript-based game engine running on a modern computer wired directly to 90-year-old electronics. \r\n\r\nWe‚Äôll start by talking about the challenges inherent in dealing with something like this. As someone used to working purely in software, how do you approach sitting down with 90-year-old hardware and actually figuring out what‚Äôs going on? When you‚Äôre working with something that has no documentation or source code, and the equivalent of ‚Äúconsole.log‚Äù is a multimeter, things often look very different from traditional web development.\r\n\r\nFrom there, we‚Äôll discuss the process of rapid prototyping. Designing a fun game is all about having a tight feedback loop between prototyping and putting things in front of actual users. That‚Äôs fairly easy in pure software, but much more time-consuming when it involves hardware, and with this sort of hybrid digital/physical experience there are often things that you can really only test on the actual hardware. We‚Äôll talk through the design process of what sort of things can be effectively user-tested purely in software, and which need actual  hardware to figure out what‚Äôs fun and what isn‚Äôt.\r\n\r\nOn the technical side, writing cross-platform code can be an effective way to prototype both purely digitally and on hardware as appropriate. ‚ÄúHello, Operator!‚Äù is written in a cross-platform JS engine that can run anywhere from the physical hardware to a Unix CLI to an iPad with a custom touch-based interface. We‚Äôll touch on the advantages and disadvantages of using JS for this sort of work as opposed to more traditional cross-platform tooling (e.g. C or Unity) or writing multiple versions of your game in different languages/environments. Separate from the specific choice of JavaScript as a language, we‚Äôll also talk about some of the higher-level engineering design¬†patterns and concepts that can allow you to more seamlessly transition between prototyping in code and in silicon.\r\n\r\nThis talk is intended for anyone with an interest in doing this sort of experimental art work and at least some level of JS experience. It will feature some code, but will be much more about high-level design concepts and process than specific implementation details.",
    "audience_level": "All",
    "tags": [
      "javascript",
      "hardware",
      "games",
      "installation art",
      "cross-platform",
      "design"
    ],
    "state": "accepted",
    "confirmed": true
  },
  {
    "name": "Shelley Vohr",
    "avatar":
      "https://secure.gravatar.com/avatar/cefbfda4b927bb53143c641440d881d7?s=500",
    "location": "Durham, NC",
    "bio":
      "Shelley is a software engineer on the Electron team at GitHub who loves figuring out how to make things work. She's passionate about clean code & diving deep into tricky problems with Javascript, Ruby, and C++. Prior to GitHub, she worked at IFTTT, Transloc, and Embedly (now part of Medium). She's also a runner, explorer, and crossword puzzle fan powered by more coffee than a human should probably drink.",
    "talk_format": "Talk (~30-45 minutes)",
    "twitter": "codebytere",
    "organization": "GitHub",
    "title": "Asynchrony: Under the Hood",
    "abstract":
      "This talk will explore the conceptual underpinnings of asynchronous programming options available to modern javascript developers in 2017, and the drawbacks and advantages to each.",
    "description":
      "ECMAscript has supported callbacks since 2009, and then as years have gone by it's added support for promises, generators, and now async/await. On a surface level, each of these techniques seeks to answer the question of how to access data that's not immediately available, but a deeper look into how each works on a granular level will show their implementation differences and how these differences affect usage. We'll take a look at how errors, conditionals, intermediate values, and debugging are affected by each method. I'll live-code a series of different scenarios so you can better visualize performance differences between options. These different scenarios will also shed light on the disadvantages and advantages of each in terms of flexibility and ease of  use and understanding. Finally, I'll talk about where the future of async might be headed. Armed with new knowledge from this dive under the hood, the potentially treacherous road to fully understanding async will hopefully become a smoother ride!",
    "audience_level": "Intermediate",
    "tags": ["Javascript", "Async", "NodeJS"],
    "state": "accepted",
    "confirmed": true
  },
  {
    "name": "Matt Hamil",
    "avatar":
      "https://secure.gravatar.com/avatar/7c608350a27f810f968d75a05050673b?s=500",
    "location": "Unknown",
    "bio":
      "Matt Hamil is a Software Development Engineer at Spera Health. He's a collaborator of react-navigation, an avid tea drinker, and a Rick Moranis look-a-like.",
    "talk_format": "Talk (~30-45 minutes)",
    "twitter": "_matthamil",
    "organization": "Spera Health",
    "title": "React: A Romance of Many Dimensions",
    "abstract":
      "Is VR an approachable medium for JavaScript developers? Can we, as front-end developers, use what we already know to build a 3D world? Can we use React to reach the 4th dimension? Yes! ReactVR is here to let us create delightful VR experiences in the browser.",
    "description":
      "We live in a 3D world, and now the web does too. Virtual Reality games and product demos\r\nimmerse the user more than the traditional 2D web experience. Luckily for us JavaScript developers, building VR apps on the web could not be easier. ReactVR allows us to be immediately productive creating 3D worlds in the browser using the same React APIs we're already familiar with. Take your web apps to another dimension as we demystify VR web app development. We'll be learning the fundamentals and more as we take a new look at a classic game, [Frogger](https://github.com/matthamil/React-VR-Frogger). The discussion will then focus on UX principles for Virtual Reality apps.",
    "audience_level": "All",
    "tags": ["React", "ReactVR", "VR"],
    "state": "accepted",
    "confirmed": true
  },
  {
    "name": "Eric Baer",
    "avatar":
      "https://secure.gravatar.com/avatar/d3bc4688eda8302a49f312290d31c38c?s=500",
    "location": "Seattle",
    "bio":
      "Eric has been developing software for over ten years ranging from embedded systems in C++ to high traffic APIs in Java and SPAs in JavaScript. For the past five years, Eric has developed a deep specialization in JavaScript and the associated ecosystem. In his current role, Eric is a lead engineer at Formidable in Seattle where he is driving large projects, and writing software around Babel, GraphQL, and i18n.",
    "talk_format": "Talk (~30-45 minutes)",
    "twitter": "ebaerbaerbaer",
    "organization": "Formidable",
    "title":
      "GraphQL For The Rest Of Us: New things for people who work on old things",
    "abstract":
      "Sometimes, it can feel like the advantages of good tools are reserved for only progressive teams. It shouldn‚Äôt be this way! This talk focuses on how to use GraphQL in real-world projects in concrete and practical detail. GraphQL is amazing, and you can take advantage of it one step at a time!",
    "description":
      "GraphQL shows a lot of promise in alleviating the burdens that mobile development has put on our RESTful APIs, but for projects and companies who are not out at the bleeding edge, new technology isn‚Äôt always an easy sell. Many of us who work in a world where there are no push button deployments, no Lambda functions, multi-minute builds are commonplace, and developers are awash in messy, undocumented APIs. For projects like this, which if we‚Äôre honest is most projects, GraphQL can still bring enormous value - perhaps even more than on a greenfield project. In this talk, I will be focusing on how GraphQL can help to for real-world teams. \r\n \r\nAfter this talk, you should come away with concrete, practical and actionable ways to bring GraphQL to your team. The specific areas of focus are:\r\n \r\nWrapping an existing REST-ish API\r\n \r\n  * Using GraphQL on projects without a JavaScript backend\r\n  * How to use GraphQL without modern front-ends like React and Vue.js\r\n  * How GraphQL works without tooling like Relay and Apollo\r\n \r\nI want to share how, and why, GraphQL works for any development team! \r\n",
    "audience_level": "All",
    "tags": ["graphql", "apis"],
    "state": "accepted",
    "confirmed": true
  },
  {
    "name": "Brian Holt",
    "avatar":
      "https://secure.gravatar.com/avatar/3994a1ac47c4a684d7378ef06c1571cd?s=500",
    "location": "San Francisco, CA",
    "bio":
      "Brian is currently working as a staff user interface engineer at LinkedIn and he finds it strange that his employer sends him recruiter spam. Previously he was an engineer at Netflix and Reddit. When not working, Brian finds time to teach on Frontend Masters, run his mouth on Front End Happy Hour, travel all over the world, and play with his adorable dog. Brian is currently a resident of San Francisco, CA.",
    "talk_format": "Talk (~30-45 minutes)",
    "twitter": "holtbt",
    "organization": "LinkedIn",
    "title": "10KB or Bust: The Delicate Power of Webpack and Babel",
    "abstract":
      "Your app is bigger and slower than it needs to be.\n\nWithout rewriting app code we can squeeze more performance out of your code by tweaking Webpack and Babel. These tools are immensely powerful but it's a delicate dance to get them to play nice. This talk is full of tips and tricks to get you there.",
    "description":
      "After three years of tooling around with Webpack and Babel at Netflix, LinkedIn, and Reddit I've gotten some battle-won knowledge that I'd like to share with you all. Some non-intuitive tricks that lead to smaller bundles, faster parse times, browser-engine opts and de-opts, and faster perceived load times. While these examples will use Preact to make examples this apply to any application that uses these two phenomenal tools. You'll be surprised at what you can do just turning a few knobs.",
    "audience_level": "Intermediate",
    "tags": [
      "react",
      "preact",
      "webpack",
      "javascript",
      "babel",
      "perf",
      "performance"
    ],
    "state": "accepted",
    "confirmed": true
  },
  {
    "name": "Bryan Hughes",
    "avatar":
      "https://secure.gravatar.com/avatar/82ac6178e8443fe8a02e480d07af21c3?s=500",
    "location": "San Francisco",
    "bio":
      "Bryan Hughes is a technical evangelist at Microsoft, a member of the [Node.js Technical Steering Committee](https://github.com/nodejs/TSC), and chairperson of the [Node.js Community Committee](https://github.com/nodejs/community-committee). Bryan is also the creator of [Raspi IO](https://github.com/nebrius/raspi-io/), a Raspberry Pi plugin for the [Johnny-Five](http://johnny-five.io) JavaScript robotics library. Outside of tech, Bryan is an [amateur photographer](http://500px.com/nebrius), [occasional writer](https://medium.com/@nebrius), a once upon a time pianist, and a wine aficionado. ",
    "talk_format": "Talk (~30-45 minutes)",
    "twitter": "nebrius",
    "organization": "Microsoft",
    "title": "The Node.js Event Loop: Not So Single Threaded",
    "abstract":
      "You've heard Node.js is single threaded. It's true that all _JavaScript_ executed by Node.js is run in a single thread, but JS isn't all. The event loop, written in C++, is multi threaded! Come learn how the event loop works, how it affects performance, and how you can use it your advantage!",
    "description":
      "Node.js is used by so many people, and everyone wants to increase performance of their code. The event loop and it's relationship with asynchronous code and multithreading is generally not well understood though. As it turns out, asynchronous code in Node.js is multi-threaded under the hood. Learning how this works enables developers to write better code, because they understand the implications of their code. This talk will help people write more performant applications.",
    "audience_level": "Intermediate",
    "tags": ["multithreading", "performance", "node.js"],
    "state": "accepted",
    "confirmed": true
  },
  {
    "name": "Delaine Wendling",
    "avatar":
      "https://secure.gravatar.com/avatar/8609e23c2cc15e30321dae5752139e26?s=500",
    "location": "Unknown",
    "bio":
      "Delaine Wendling is a Full-stack Software Developer building custom software for a charter school network in Nashville, TN. When she is not coding she enjoys doing yoga, being outside, and putting pen or paintbrush to paper. ",
    "talk_format": "Talk (~30-45 minutes)",
    "twitter": "delainewendling",
    "organization": "RePublic Schools",
    "title": "Demystifying D3 With the Help of Shakespeare",
    "abstract":
      "Data is changing the way we live. From the people we date to the routes we take to work, data is being used to inform our decisions, even more so, when adequately visualized. D3 can help you become a player in the data revolution by turning raw data into powerful visualizations.\n",
    "description":
      "We, as developers, do not have to exist solely on the receiving end of the data revolution, we should feel empowered to utilize our skills and the myriad tools out there to make our mark. D3 is one tool that can help us do just that. In this talk we will use the help of some of Shakespeare‚Äôs most famous characters to understand how D3 handles incoming and outgoing data. We will also discuss when D3 is the right data visualization tool for the job and how to get started building your very own visualizations.",
    "audience_level": "Beginner",
    "tags": ["JavaScript", "D3", "Data Visualization"],
    "state": "accepted",
    "confirmed": true
  },
  {
    "name": "Christina Holland",
    "avatar":
      "https://secure.gravatar.com/avatar/5c8449333a71c6508377dbbb83830ea1?s=500",
    "location": "Unknown",
    "bio":
      "Christina is a front-end developer working in the San Francisco Bay Area.  This is her third career after biotech and animation.  She likes elegant puzzle solutions, pretty and intuitive UI, and data visualizations that make complex things simple.  She also writes comedy pieces for Cracked.com.",
    "talk_format": "Talk (~30-45 minutes)",
    "twitter": "americanwombat",
    "organization": "Pepperdata",
    "title": "React + Charts, With And Without Libraries",
    "abstract":
      "Getting charts and other data visualizations to work seamlessly with front-end frameworks like React can be a challenge. Many people go straight to D3, but there are other options, including higher-level libraries, or even no libraries at all! I'll explore the pros and cons of each approach.",
    "description":
      "React + Charts, With And Without Libraries\r\n\r\nOutline\r\n\r\n1. Why Charts (and other data visualization) In React?\r\n\r\n2. When Would You Use Libraries?\r\n3. The Chart Spectrum:\r\n   \r\n        << more custom <<                      >> more boilerplate >>\r\n        <====================-----------------======================> \r\n        (low-level libraries)  (roll yo own)  (high-level libraries)\r\n3. Low Level Libraries (D3, Flot, etc.)\r\n\t- Lots of flexibility\r\n\t- SVG vs Canvas considerations\r\n\t- Two approaches - black box DOM element controlled by charting library vs each SVG element (if SVG library) controlled by React\r\n\r\n4. High Level Libraries (Highcharts, etc.)\r\n\t- Quick display of most standard chart types, just give it data\r\n\t- Why reinvent the wheel?\r\n\r\n5. Why Roll Your Own Data Viz\r\n\t- Keep codebase lean (not just reduce bundle size but avoid another dependency)\r\n\t- Concept is too customized to be easily done with a high-level library\r\n\t- Easy enough to do without power of D3 (lots of rectangles, simple math)\r\n\t- Integrate with other components (SVG + canvas + React) - some functions of D3, Flot, etc. are black boxes or a hassle to return data from\r\n\r\n6. Examples\r\n\t- Dashboard \"Funnel chart\" (SVG) - Very simple shapes, not available as boilerplate (left is custom SVG, right is D3)\r\n\t    ![two chart tiles](http://meanestbear.com/junk/containers-charts.png)\r\n\r\n\t- Host uptime (divs) - By setting bar width style using percentages, formatting functions don't need to know how wide the container is, adjust automatically.\r\n\t    ![page showing visualization with simple divs](http://meanestbear.com/junk/hosts-reporting.png)\r\n\r\n\t- Executor View (Canvas + divs) - canvas and divs work together\r\n\t    ![page showing canvas and divs working together](http://meanestbear.com/junk/executor-page.png)\r\n\t    \r\n\t- Table View (React table, Flot chart, div chart) - A little painful to get Flot to cooperate with the other components, have to notify other elements through event, Flot hooks can't easily modify React state\r\n\t    ![page showing many different elements working together](http://meanestbear.com/junk/stages-page.png)",
    "audience_level": "All",
    "tags": ["d3", "data visualization", "react"],
    "state": "accepted",
    "confirmed": true
  },
  {
    "name": "Stephanie Provence",
    "avatar":
      "https://secure.gravatar.com/avatar/856ce373e1de5bde65f977bd49956166?s=500",
    "location": "Nashville",
    "bio":
      "My name is Stephanie. I had six wisdom teeth removed. You can say I'm a bit of an over-achiever. I am a Belmont University and Iron Yard Nashville graduate. I spent six years in public relations and I realized what I love most is good UX design, sensible typography and bringing ideas to life so I left PR to study front-end development at The Iron Yard. Fast forward a year and now I am a Web Developer at Lewis Communications, one of the largest Southeast digital agencies. I work on a variety of projects, but one of my favorites has been building a new site for Good People Beer. I co-founded the Nashville chapter of Tech Ladies, an organization focused on women helping other women in the technology sector. Additionally, I continue to volunteer my time teaching high school girls to code with the Iron Bobcats, the Overton High School club.\r\n\r\nWhen I‚Äôm not on the job, I love hiking with my corgi, working my way through every recipe in the family cookbook, and indulging my love for seeing new places. I'm currently working on a blog about my journey to becoming a healthier person, life as a developer and creating beginner friendly courses that hopefully will help to create a bridge between women bloggers and technical blogs. ",
    "talk_format": "Talk (~30-45 minutes)",
    "twitter": "steph_happens",
    "organization": "Lewis Communications",
    "title": "Oh Node You Didn't!",
    "abstract":
      "Maybe you‚Äôre here because your boss told you to be. Maybe you‚Äôre here because you‚Äôre hungry for more information. Maybe you‚Äôre here because like me, you aren‚Äôt entirely sure what Node is. Rest assured you‚Äôre in good company :D. Let‚Äôs take a dive into what Node.js actually is and learn together!",
    "description":
      "One year ago I attended Nodevember as a student of the Iron Yard Nashville. I was dipping my toes into the wild west of Javascript and knew enough to be dangerous and there I was at a conference dedicated to Node and I had NO IDEA what Node actually is. I had seen it in my build tools and knew that if I opened the folder of Node modules that there was going to be a solid minute of scrolling to close it back. At any rate, I was too embarrassed to ask someone what the heck Node is and I continued to attend the sessions. In the end, this only hurt myself, but I'm willing to bet I wasn't the only one like that. This year, I'm hoping to fill the gap of those who have never dug into Node, but have definitely used it or at least seen it in their files and create a warm and welcoming talk for beginners. \r\n\r\n### Technical \r\nLet‚Äôs take a look at what Node is doing for you behind the scenes and the importance of why you should learn it as a junior developer. \r\n- What is Node.js\r\n- Why Node.js was created and what problems did/does it solve\r\n- What Node.js is good for and what applications would benefit the most from its usage\r\n- What large companies using it currently and how it is making their software better and performant\r\n- How Node.js can make you a better at Javascript\r\n",
    "audience_level": "Beginner",
    "tags": ["Node", "Javascript", "Junior Developers", "Beginner Friendly"],
    "state": "accepted",
    "confirmed": true
  },
  {
    "name": "Alex Castillo",
    "avatar":
      "https://secure.gravatar.com/avatar/42f7ad8e98a2fcaa27e0e9efdbab0221?s=500",
    "location": "New York, NY",
    "bio":
      "Alex Castillo is a Software Engineer at Netflix and specializes in enterprise single-page applications. Alex is very passionate about the human brain and how we can use technology to understand it better. He has contributed to the open source community and focuses on Angular, React and NeuroTech. In his spare time, he likes experimenting with guitars and IoT.",
    "talk_format": "Talk (~30-45 minutes)",
    "twitter": "castillo__io",
    "organization": "Netflix",
    "title": "Brain-Computer Interfaces in Node",
    "abstract":
      "The human body is a ocean of electricity. Billions of neurons are constantly engaging as our thoughts go from one state to the next. Come see how we can tap into this data generated by human cells in Node.\n",
    "description":
      "Outline:\r\n\r\n* The basics of neurotech\r\n* Electrical biosignals (EEG)\r\n* Brain-computer interfaces, how they work, how to communicate with them in Node\r\n* Engineering best practices for high-rate real-time data from a BCI (design patterns such as Reactive programming / observables)\r\n* Live demo\r\n* The future of brain-computer interfaces\r\n* Closing\r\n\r\nWhy is important:\r\n\r\nThe NeuroTech community is starting to take off. Companies like Facebook and Elon Musk's Neuralink have announced their work with brain-computer interfaces. Tech communities like Python have become the go-to for this type of work but Node has so much more to offer. I want to inspire Node engineers to start getting into NeuroTech and start contributing.\r\n",
    "audience_level": "Intermediate",
    "tags": [
      "Node",
      "Javascript",
      "brain computer interfaces",
      "bci",
      "neurotech"
    ],
    "state": "accepted",
    "confirmed": true
  },
  {
    "name": "Cory House",
    "avatar":
      "https://secure.gravatar.com/avatar/09e16ce7b4bc21025c9940f5a167cfa9?s=500",
    "location": "Kansas City, KS",
    "bio":
      "Cory is a Pluralsight author, Microsoft MVP, Software Architect, independent consultant, and international speaker. He has trained over 10,000 software developers worldwide on clean coding practices, front-end development, testing, and software architecture. He currently specializes in ASP.NET, JavaScript and front-end development using React. Cory is author of multiple Pluralsight courses and is active on Twitter as @housecor.",
    "talk_format": "Talk (~30-45 minutes)",
    "twitter": "housecor",
    "organization": "Pluralsight",
    "title": "Creating a Reusable React Component Library",
    "abstract":
      "Creating React components is easy. Designing and publishing truly reusable React components is hard.  This session explores specific lessons learned from creating a library of reusable React components at Cox Automotive. ",
    "description":
      "Creating React components is easy. Creating truly reusable and flexible React components that are useful in a variety of contexts is hard. This session explores reusable component design patterns and specific lessons learned from creating a library of reusable React components at Cox Automotive. We'll discuss key concerns you need to consider including development environment, styling, testing, publishing, and documentation.",
    "audience_level": "All",
    "tags": ["react", "reusable components"],
    "state": "accepted",
    "confirmed": true
  },
  {
    "name": "Colin Ihrig",
    "avatar":
      "https://secure.gravatar.com/avatar/1a66496591e906c638a80a63b98cd2be?s=500",
    "location": "Unknown",
    "bio":
      "Colin Ihrig is a member of the Node.js Core Technical Committee, a libuv collaborator, and a hapi.js core team member. Colin is the author of Pro Node.js for Developers, and co-author of Full Stack JavaScript Development with MEAN. Colin is currently a product engineer at Joyent, focusing on Node.js development and enterprise support.",
    "talk_format": "Talk (~30-45 minutes)",
    "twitter": "cjihrig",
    "organization": "Joyent",
    "title": "The State of Node Core",
    "abstract":
      "Node.js, as a platform, is constantly changing and evolving. Node's core is a melting pot of features from our own community, as well as dependencies such as V8 and libuv. This talk will cover the latest developments in Node 8 as it enters LTS, as well as the freshly released Node 9.",
    "description":
      "This talk will cover the current (as of November) state of Node core. An outline of the major points covered in this talk is shown below.\r\n\r\n1. A discussion of the Long Term Support (LTS) schedule, and where the currently supported release lines fit in.\r\n2. New features inherited from V8. This includes WebAssembly, and async/await. Also, the new TurboFan + Ignition compiler pipeline.\r\n3. N-API. This is Node's new approach to creating native addons. By maintaining a consistent API and ABI across versions, native addons can be compiled once and run on multiple versions of Node, even if those versions are running on different VMs.\r\n4. http2. This is a new core module implementing the HTTP 2 protocol. Under the hood it utilizes the popular nghttp2 library.\r\n5. Miscellaneous breaking changes and notable features in Node 9.\r\n6. Upcoming changes on the horizon. These may take the form of open pull requests or features that have not been released yet.\r\n** Exact content is subject to change as the codebase evolves between now (early August) and November.",
    "audience_level": "All",
    "tags": ["javascript", "nodejs"],
    "state": "accepted",
    "confirmed": true
  },
  {
    "name": "Gabrielle Crevecoeur",
    "avatar":
      "https://secure.gravatar.com/avatar/1d1c3d0dff776fedc6a4f10cd7824314?s=500",
    "location": "Unknown",
    "bio":
      "Gabrielle Crevecoeur is a technical evangelist at Microsoft specializing in open source development. Her current focus is Node.js. Gabrielle is a recent graduate of Florida State University, where she majored in computer science. She is now attending the University of Illinois at Chicago, were she is working to her Masters of Science in Electrical Engineering. When Gabrielle is not programming, you can find her playing video games or watching Netflix.",
    "talk_format": "Workshop (> 60 minutes)",
    "twitter": "nowayshecodes",
    "organization": "Microsoft",
    "title": "Learn About Nodebots: Node.js + Robotics + IoT Workshop",
    "abstract":
      "Go one step beyond the browser and leverage your existing JavaScript skills to explore the possibilities of hardware. In this workshop we will go step by step on how Node can be used to control a microcontroller, gather and store device data and of course you will leave with a functioning Nodebot.",
    "description":
      "Go one step beyond the browser and leverage your existing JavaScript skills to explore the possibilities of hardware. Have you ever wanted to see how Node.js can be used for more than web applications? Have you wanted to learn more on  how to create interactive experiences in the physical world? This workshop will explore how to utilize the popular Node robotics frameworks to control an micro-controller, use your micro-controller as an IoT device and leave you with a new skill set for any of your future maker projects . \r\n\r\nWe will start with teaching attendees on what a micro-controller is and how they work. Following, will be a step by step coding session on how the Node framework, Johnny Five, can be used to control your device. Lastly with some fun and friendly competitions, attendees will also explore how their devices can gather data and be used for IoT projects. ",
    "audience_level": "All",
    "tags": ["node", "arduino", "microcontroller", "Iot", "azure"],
    "state": "accepted",
    "confirmed": true
  },
  {
    "name": "Eve Porcello",
    "avatar":
      "https://secure.gravatar.com/avatar/6d77554e2d881d629862f49363bebd09?s=500",
    "location": "Tahoe City, CA",
    "bio":
      "Eve Porcello is a software engineer and instructor based in Tahoe City, California. She works with Moon Highway to design and deliver hands-on engineering training classes at places like Stanford University, ebay, PayPal, and more. Eve also has created numerous courses for LinkedIn Learning including Learning GraphQL and is the co-author of O‚ÄôReilly‚Äôs Learning React.",
    "talk_format": "Workshop (> 60 minutes)",
    "twitter": "eveporcello",
    "organization": "Moon Highway",
    "title": "APIs, But Better: An Intro to GraphQL and Apollo",
    "abstract":
      "Heard of GraphQL and Apollo but weren‚Äôt sure where to get started? Went to a talk that had you totally excited until you got back to work and your dreams were quashed by your REST overlords? In this workshop, you'll learn all of the basics of GraphQL in a fun, useful, and hands-on workshop.",
    "description":
      "Starting with the schema, students will learn the process of setting up a React application using Apollo and GraphQL. Then we‚Äôll set up a GraphQL endpoint and load its data into a React user interface. Throughout the course, there will be hands-on activities to ensure that students can take these skills back to their own projects right away.\r\n\r\nTopics Include:\r\n* Intro to GraphQL\r\n* How GraphQL Differs from REST\r\n* Creating a Schema\r\n* Writing Resolvers\r\n* Working with express-graphql\r\n* Understanding Apollo\r\n\r\nStudents should bring a laptop with a code editor, a power cord, and since it's Nodevember, have Node installed!",
    "audience_level": "Beginner",
    "tags": ["graphql", "javascript", "react", "apollo", "apis"],
    "state": "accepted",
    "confirmed": true
  },
  {
    "name": "Sergio Cruz",
    "avatar":
      "https://secure.gravatar.com/avatar/856ce373e1de5bde65f977bd49956166?s=500",
    "location": "Orlando, FL",
    "bio":
      "Sergio Cruz is a senior software developer who works regularly with Angular and React. He has a passion for teaching technical topics and loves exploring the latest web development trends.",
    "talk_format": "Talk (~30-45 minutes)",
    "twitter": "hashtagserg",
    "organization": "",
    "title": "Upgrading an AngularJS Directive to Angular Component",
    "abstract":
      "This upgrading Angular talk explores the evolution of the framework through my own personal learning and development experience and ends with a demonstration of how to convert an AngularJS 1.x application to Angular (version 4+). Leave this talk feeling empowered to start upgrading your own apps!",
    "description":
      "Here's a walkthrough on how I've been packaging my apps through the years: - **2013:** When I first learned AngularJS, simple script tags & global variables - **2014:** Used yeoman generators with Grunt that grouped & minified files - **2015:** Adopted ES2015 modules, migrated to Gulp + Babel + Browserify - **2016:** Time to upgrade to Angular (version 4+) and TypeScript _(but how!?)_ To say things shift fast in the JavaScript world is an understatement. While the guide above describes mostly how my years were, I am mostly skipping over my experiments with adopting Bower, dropping Bower, using npm for everything, bundling with Webpack, trying out Rollup, and the list could go on.\r\nUpgrading was not easy, as it requires a quite some changes within the AngularJS app. Follow along with my journey as I showcase how to upgrade a sample app, and leave this talk feeling empowered to start upgrading your apps.",
    "audience_level": "All",
    "tags": ["angularjs", "angular", "javascript", "typescript"],
    "state": "accepted",
    "confirmed": true
  }
]
